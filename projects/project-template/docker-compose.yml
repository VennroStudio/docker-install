# =======================================================  
# ПРОЕКТ С ПОДДЕРЖКОЙ ОБЩИХ СЕРВИСОВ
# =======================================================

services:

  # PHP-FPM (всегда собственный)
  php-fpm:
    build:
      context: ./php
      args:
        PHP_VERSION: ${PHP_VERSION}
    container_name: ${PROJECT_NAME}-php-fpm
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
      - ./php/config/php.ini:/usr/local/etc/php/php.ini
    environment:
      - TIMEZONE=${TIMEZONE}
      - PROJECT_NAME=${PROJECT_NAME}
      # Подключение к БД (общей или собственной)
      - DB_HOST=${USE_SHARED_DB:+${SHARED_DB_HOST}}${USE_SHARED_DB:-${PROJECT_NAME}-mariadb}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      # Подключение к Redis (общему или собственному)  
      - REDIS_HOST=${USE_SHARED_REDIS:+${SHARED_REDIS_HOST}}${USE_SHARED_REDIS:-${PROJECT_NAME}-redis}
      - REDIS_PORT=${USE_SHARED_REDIS:+${SHARED_REDIS_PORT}}${USE_SHARED_REDIS:-6379}
      # Настройки почты
      - MAIL_HOST=${USE_SHARED_MAILHOG:+${SHARED_MAILHOG_HOST}}${USE_SHARED_MAILHOG:-${PROJECT_NAME}-mailhog}
      - MAIL_PORT=${USE_SHARED_MAILHOG:+${SHARED_MAILHOG_PORT}}${USE_SHARED_MAILHOG:-1025}
    networks:
      - project-internal
      # Подключение к общим сервисам если используются
      - ${USE_SHARED_DB:+shared-services}
      - ${USE_SHARED_REDIS:+shared-services}
      - ${USE_SHARED_MAILHOG:+shared-services}
    env_file:
      - .env

  # Apache веб-сервер (условно включается)
  apache:
    profiles: ["apache"]
    build: ./apache
    container_name: ${PROJECT_NAME}-apache
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
      - ./apache/config/httpd.conf:/usr/local/apache2/conf/httpd.conf
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_DOMAIN=${PROJECT_DOMAIN}
      - PHP_FPM_HOST=${PROJECT_NAME}-php-fpm
    networks:
      - traefik-public
      - project-internal
    depends_on:
      - php-fpm
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PROJECT_NAME}-http.rule=Host(`${PROJECT_DOMAIN}`)${PROJECT_DOMAINS_EXTRA:+ || Host(`${PROJECT_DOMAINS_EXTRA}`)}
      - traefik.http.routers.${PROJECT_NAME}-http.entryPoints=http
      - traefik.http.routers.${PROJECT_NAME}-http.middlewares=redirect-to-https
      - traefik.http.routers.${PROJECT_NAME}.rule=Host(`${PROJECT_DOMAIN}`)${PROJECT_DOMAINS_EXTRA:+ || Host(`${PROJECT_DOMAINS_EXTRA}`)}
      - traefik.http.routers.${PROJECT_NAME}.entryPoints=https
      - traefik.http.routers.${PROJECT_NAME}.tls=true
      - traefik.http.routers.${PROJECT_NAME}.tls.certResolver=letsEncrypt
      - traefik.http.services.${PROJECT_NAME}.loadBalancer.server.port=80

  # Nginx веб-сервер (условно включается) 
  nginx:
    profiles: ["nginx"]
    build: ./nginx
    container_name: ${PROJECT_NAME}-nginx
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/config/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_DOMAIN=${PROJECT_DOMAIN}
      - PHP_FPM_HOST=${PROJECT_NAME}-php-fpm
    networks:
      - traefik-public
      - project-internal
    depends_on:
      - php-fpm
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PROJECT_NAME}-http.rule=Host(`${PROJECT_DOMAIN}`)${PROJECT_DOMAINS_EXTRA:+ || Host(`${PROJECT_DOMAINS_EXTRA}`)}
      - traefik.http.routers.${PROJECT_NAME}-http.entryPoints=http
      - traefik.http.routers.${PROJECT_NAME}-http.middlewares=redirect-to-https
      - traefik.http.routers.${PROJECT_NAME}.rule=Host(`${PROJECT_DOMAIN}`)${PROJECT_DOMAINS_EXTRA:+ || Host(`${PROJECT_DOMAINS_EXTRA}`)}
      - traefik.http.routers.${PROJECT_NAME}.entryPoints=https
      - traefik.http.routers.${PROJECT_NAME}.tls=true
      - traefik.http.routers.${PROJECT_NAME}.tls.certResolver=letsEncrypt
      - traefik.http.services.${PROJECT_NAME}.loadBalancer.server.port=80

# ✅ ИСПРАВЛЕНО: Внешние сети
networks:
  traefik-public:
    external: true
  shared-services:
    external: true

  # Приватная сеть проекта  
  project-internal:
    name: ${PROJECT_NAME}_internal
    driver: bridge
